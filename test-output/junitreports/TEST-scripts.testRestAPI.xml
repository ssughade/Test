<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="EPPLKRAW07AB" failures="0" tests="30" name="scripts.testRestAPI" time="14.945" errors="0" timestamp="2023-01-16T15:53:18 CET" skipped="0">
  <testcase classname="scripts.testRestAPI" name="testVerifyPostIDData" time="0.503"/>
  <system-out>
    <![CDATA[Feature POSITIVE :
Step To Execute : Send Request with valid postid & comments
Expected Result: 1. API should return as response to 5 postid's data.
2. 'name', 'email' & 'body' should match as mentioned in respective columns for given post id & id
NOTE : This verify 1st record in response Testcase ID : Get all data for post id and verify data For API : https://jsonplaceholder.typicode.com/posts/2/comments Started 
Verifying number of records return by API
Extracting 'name' for postId 2
Verifying 'name' : Expected 'et fugit eligendi deleniti quidem qui sint nihil autem' Actual : 'et fugit eligendi deleniti quidem qui sint nihil autem'
Extracting 'name' for postId 2
Verifying 'email' : Expected 'Presley.Mueller@myrl.com' Actual : 'Presley.Mueller@myrl.com'
Extracting 'body' for postId 2
Verifying 'body' : Expected 'doloribus at sed quis culpa deserunt consectetur qui praesentium\naccusamus fugiat dicta\nvoluptatem rerum ut voluptate autem\nvoluptatem repellendus aspernatur dolorem in' Actual : 'doloribus at sed quis culpa deserunt consectetur qui praesentium\naccusamus fugiat dicta\nvoluptatem rerum ut voluptate autem\nvoluptatem repellendus aspernatur dolorem in'
Feature POSITIVE :
Step To Execute : Send Request with valid postid & comments
Expected Result: 1. API should return as response to 5 postid's data.
2. 'name', 'email' & 'body' should match as mentioned in respective columns for given post id & id
NOTE : This verify 1st record in response Testcase ID : Get all data for post id and verify data Done!! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testVerifyPostIDData" time="0.467"/>
  <system-out>
    <![CDATA[Feature POSITIVE :
Step To Execute : Send Request with valid postid & comments
Expected Result: 1. API should return as response to 5 postid's data.
2. 'name', 'email' & 'body' should match as mentioned in respective columns for given post id & id
NOTE : This verify last record in response Testcase ID : Get all data for post id and verify data For API : https://jsonplaceholder.typicode.com/posts/2/comments Started 
Verifying number of records return by API
Extracting 'name' for postId 2
Verifying 'name' : Expected 'eaque et deleniti atque tenetur ut quo ut' Actual : 'eaque et deleniti atque tenetur ut quo ut'
Extracting 'name' for postId 2
Verifying 'email' : Expected 'Carmen_Keeling@caroline.name' Actual : 'Carmen_Keeling@caroline.name'
Extracting 'body' for postId 2
Verifying 'body' : Expected 'voluptate iusto quis nobis reprehenderit ipsum amet nulla\nquia quas dolores velit et non\naut quia necessitatibus\nnostrum quaerat nulla et accusamus nisi facilis' Actual : 'voluptate iusto quis nobis reprehenderit ipsum amet nulla\nquia quas dolores velit et non\naut quia necessitatibus\nnostrum quaerat nulla et accusamus nisi facilis'
Feature POSITIVE :
Step To Execute : Send Request with valid postid & comments
Expected Result: 1. API should return as response to 5 postid's data.
2. 'name', 'email' & 'body' should match as mentioned in respective columns for given post id & id
NOTE : This verify last record in response Testcase ID : Get all data for post id and verify data Done!! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testVerifyPostIDData" time="0.477"/>
  <system-out>
    <![CDATA[Feature NEGATIVE :
Step To Execute : Send Request with valid postid & comments
Expected Result: 1. API should return as response to 5 postid's data.
2. Searching for id which is not present in response, so it should return 'name', 'email' & 'body' as BLANK
 Testcase ID : Get all data for post id and verify data For API : https://jsonplaceholder.typicode.com/posts/2/comments Started 
Verifying number of records return by API
Extracting 'name' for postId 2
Verifying 'name' : Expected '' Actual : ''
Extracting 'name' for postId 2
Verifying 'email' : Expected '' Actual : ''
Extracting 'body' for postId 2
Verifying 'body' : Expected '' Actual : ''
Feature NEGATIVE :
Step To Execute : Send Request with valid postid & comments
Expected Result: 1. API should return as response to 5 postid's data.
2. Searching for id which is not present in response, so it should return 'name', 'email' & 'body' as BLANK
 Testcase ID : Get all data for post id and verify data Done!! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testRequestAndResponse" time="0.325"/>
  <system-out>
    <![CDATA[Feature POSITIVE
Step to execute: Send API Request with invalid id with PUT method
Expected Result: 1. Response Status code should be 500
2. Json response should be BLANK Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts/101 Started 
Building JSON Body {  "" : null }
Sending Request : https://jsonplaceholder.typicode.com/posts/101
Response Code from API : 500
Response from API : TypeError: Cannot read properties of undefined (reading 'id')
    at update (/app/node_modules/json-server/lib/server/router/plural.js:262:24)
    at Layer.handle [as handle_request] (/app/node_modules/express/lib/router/layer.js:95:5)
    at next (/app/node_modules/express/lib/router/route.js:137:13)
    at next (/app/node_modules/express/lib/router/route.js:131:14)
    at Route.dispatch (/app/node_modules/express/lib/router/route.js:112:3)
    at Layer.handle [as handle_request] (/app/node_modules/express/lib/router/layer.js:95:5)
    at /app/node_modules/express/lib/router/index.js:281:22
    at param (/app/node_modules/express/lib/router/index.js:354:14)
    at param (/app/node_modules/express/lib/router/index.js:365:14)
    at Function.process_params (/app/node_modules/express/lib/router/index.js:410:3)
API has Internal server error
Feature POSITIVE
Step to execute: Send API Request with invalid id with PUT method
Expected Result: 1. Response Status code should be 500
2. Json response should be BLANK Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts/101 Done! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testVerifyUserIDData" time="0.372"/>
  <system-out>
    <![CDATA[Feature POSITIVE :
Step To Execute : Send Request.  
Expected Result: 1. API should return as response of 100 userId's data.
2. 'title' & 'body' should match as mentioned in respective columns for given user id & id Testcase ID : Get all data for user id and verify data For API : https://jsonplaceholder.typicode.com/posts Started 
Verifying number of records return by API
Extracting 'title' for userid 10
Verifying 'title' : Expected 'at nam consequatur ea labore ea harum' Actual : 'at nam consequatur ea labore ea harum'
Extracting 'body' for userid 10
Verifying 'body' : Expected 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut' Actual : 'cupiditate quo est a modi nesciunt soluta\nipsa voluptas error itaque dicta in\nautem qui minus magnam et distinctio eum\naccusamus ratione error aut'
Feature POSITIVE :
Step To Execute : Send Request.  
Expected Result: 1. API should return as response of 100 userId's data.
2. 'title' & 'body' should match as mentioned in respective columns for given user id & id Testcase ID : Get all data for user id and verify data Done!! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testRequestAndResponse" time="0.334"/>
  <system-out>
    <![CDATA[Feature POSITIVE
Step to execute: Send API Request with valid data with PATCH method. Jason body includes 1 fields
Expected Result: 1. Response Status code should be 200
2. Response to the API should be 'id', 'title', 'body' & 'userId' and it should match with data mentioned in respective columns Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts/1 Started 
Building JSON Body {  "title" : "sunt aut facere repellat provident occaecati excepturi optio reprehenderit" }
Sending Request : https://jsonplaceholder.typicode.com/posts/1
Response Code from API : 200
Response from API : {
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
}
Verify 'id' Expected : '1' Actual : 1
Verify 'title' Expected : 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit' Actual : sunt aut facere repellat provident occaecati excepturi optio reprehenderit
Verify 'body' Expected : 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto' Actual : quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto
Verify 'userId' Expected : '1' Actual : 1
Feature POSITIVE
Step to execute: Send API Request with valid data with PATCH method. Jason body includes 1 fields
Expected Result: 1. Response Status code should be 200
2. Response to the API should be 'id', 'title', 'body' & 'userId' and it should match with data mentioned in respective columns Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts/1 Done! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testRequestAndResponse" time="0.335"/>
  <system-out>
    <![CDATA[Feature POSITIVE
Step to execute: Send API Request with invalid id with POST method
Expected Result: 1. Response Status code should be 404
2. Json response should be BLANK Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts/101 Started 
Building JSON Body {  "" : null }
Sending Request : https://jsonplaceholder.typicode.com/posts/101
Response Code from API : 404
Response from API : {}
Feature POSITIVE
Step to execute: Send API Request with invalid id with POST method
Expected Result: 1. Response Status code should be 404
2. Json response should be BLANK Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts/101 Done! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testVerifyUserIDData" time="0.353"/>
  <system-out>
    <![CDATA[Feature NEGATIVE :
Step To Execute : Send Request by passing invalid userId
Expected Result: 1. API should NOT return any data for invalid userId's data.
2. 'title' & 'body' should be BLANK Testcase ID : Get all data for user id and verify data For API : https://jsonplaceholder.typicode.com/posts/0 Started 
Verifying number of records return by API
Extracting 'title' for userid 0
Verifying 'title' : Expected '' Actual : ''
Extracting 'body' for userid 0
Verifying 'body' : Expected '' Actual : ''
Feature NEGATIVE :
Step To Execute : Send Request by passing invalid userId
Expected Result: 1. API should NOT return any data for invalid userId's data.
2. 'title' & 'body' should be BLANK Testcase ID : Get all data for user id and verify data Done!! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testRequestAndResponse" time="0.343"/>
  <system-out>
    <![CDATA[Feature POSITIVE
Step to execute: Send API Request with valid data with POST method. Jason's body is BLANK.
Expected Result: 1. Response Status code should be 201, It should create data successfully
2. Response to the API should be 'id' and it should match with data mentioned in respective columns Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts Started 
Building JSON Body {  "" : null }
Sending Request : https://jsonplaceholder.typicode.com/posts
Response Code from API : 201
Response from API : {
  "": null,
  "id": 101
}
Verify 'id' Expected : '101' Actual : 101
Verify field 'title' should not be present in JSON response
Verify field 'body' should not be present in JSON response
Verify field 'userId' should not be present in JSON response
Feature POSITIVE
Step to execute: Send API Request with valid data with POST method. Jason's body is BLANK.
Expected Result: 1. Response Status code should be 201, It should create data successfully
2. Response to the API should be 'id' and it should match with data mentioned in respective columns Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts Done! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testVerifyPostIDData" time="0.482"/>
  <system-out>
    <![CDATA[Feature NEGATIVE : 
Step To Execute : Send Request with valid postid
Expected Result: 1. API should return as response of 5 postid's data.
2. Search for 'id' which is DOES NOT present in response, verify that 'name', 'email' & 'body' should be blank Testcase ID : Get all data for post id and verify data For API : https://jsonplaceholder.typicode.com/comments?postId=1 Started 
Verifying number of records return by API
Extracting 'name' for postId 1
Verifying 'name' : Expected '' Actual : ''
Extracting 'name' for postId 1
Verifying 'email' : Expected '' Actual : ''
Extracting 'body' for postId 1
Verifying 'body' : Expected '' Actual : ''
Feature NEGATIVE : 
Step To Execute : Send Request with valid postid
Expected Result: 1. API should return as response of 5 postid's data.
2. Search for 'id' which is DOES NOT present in response, verify that 'name', 'email' & 'body' should be blank Testcase ID : Get all data for post id and verify data Done!! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testVerifyUserIDData" time="1.497"/>
  <system-out>
    <![CDATA[Feature POSITIVE :
Step To Execute : Send Request.  
Expected Result: 1. API should return as response of 100 userId's data.
2. 'title' & 'body' should match as mentioned in respective columns for given userid & id Testcase ID : Get all data for user id and verify data For API : https://jsonplaceholder.typicode.com/posts Started 
Verifying number of records return by API
Extracting 'title' for userid 1
Verifying 'title' : Expected 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit' Actual : 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit'
Extracting 'body' for userid 1
Verifying 'body' : Expected 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto' Actual : 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto'
Feature POSITIVE :
Step To Execute : Send Request.  
Expected Result: 1. API should return as response of 100 userId's data.
2. 'title' & 'body' should match as mentioned in respective columns for given userid & id Testcase ID : Get all data for user id and verify data Done!! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testVerifyPostIDData" time="1.627"/>
  <system-out>
    <![CDATA[Feature POSITIVE :
Step To Execute : Send Request with valid postid
Expected Result: 1. API should return as response to 5 postid's data.
2. 'name', 'email' & 'body' should match as mentioned in respective columns for given post id & id
NOTE : This verify 1st record in response Testcase ID : Get all data for post id and verify data For API : https://jsonplaceholder.typicode.com/comments?postId=1 Started 
Verifying number of records return by API
Extracting 'name' for postId 1
Verifying 'name' : Expected 'id labore ex et quam laborum' Actual : 'id labore ex et quam laborum'
Extracting 'name' for postId 1
Verifying 'email' : Expected 'Eliseo@gardner.biz' Actual : 'Eliseo@gardner.biz'
Extracting 'body' for postId 1
Verifying 'body' : Expected 'laudantium enim quasi est quidem magnam voluptate ipsam eos\ntempora quo necessitatibus\ndolor quam autem quasi\nreiciendis et nam sapiente accusantium' Actual : 'laudantium enim quasi est quidem magnam voluptate ipsam eos\ntempora quo necessitatibus\ndolor quam autem quasi\nreiciendis et nam sapiente accusantium'
Feature POSITIVE :
Step To Execute : Send Request with valid postid
Expected Result: 1. API should return as response to 5 postid's data.
2. 'name', 'email' & 'body' should match as mentioned in respective columns for given post id & id
NOTE : This verify 1st record in response Testcase ID : Get all data for post id and verify data Done!! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testVerifyPostIDData" time="0.484"/>
  <system-out>
    <![CDATA[Feature NEGATIVE :
Step To Execute : Send Request with invalid postid
Expected Result: 1. API should NOT return any response, so number of data in response should be 0
2. Search for 'id' which is DOES NOT present in response, verify that 'name', 'email' & 'body' should be blank Testcase ID : Get all data for post id and verify data For API : https://jsonplaceholder.typicode.com/comments?postId=0 Started 
Verifying number of records return by API
Extracting 'name' for postId 1
Verifying 'name' : Expected '' Actual : ''
Extracting 'name' for postId 1
Verifying 'email' : Expected '' Actual : ''
Extracting 'body' for postId 1
Verifying 'body' : Expected '' Actual : ''
Feature NEGATIVE :
Step To Execute : Send Request with invalid postid
Expected Result: 1. API should NOT return any response, so number of data in response should be 0
2. Search for 'id' which is DOES NOT present in response, verify that 'name', 'email' & 'body' should be blank Testcase ID : Get all data for post id and verify data Done!! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testRequestAndResponse" time="0.325"/>
  <system-out>
    <![CDATA[Feature POSITIVE
Step to execute: Send API Request with valid data with PUT method. Jason body includes only 2 fields
Expected Result: 1. Response Status code should be 200
2. Response to the API should be 'title' & 'id' and it should match with data mentioned in respective columns Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts/1 Started 
Building JSON Body {  "id" : "1",  "title" : "Siddharth Sarjerao Ughade" }
Sending Request : https://jsonplaceholder.typicode.com/posts/1
Response Code from API : 200
Response from API : {
  "id": 1,
  "title": "Siddharth Sarjerao Ughade"
}
Verify 'id' Expected : '1' Actual : 1
Verify 'title' Expected : 'Siddharth Sarjerao Ughade' Actual : Siddharth Sarjerao Ughade
Verify field 'userId' should not be present in JSON response
Verify field 'body' should not be present in JSON response
Feature POSITIVE
Step to execute: Send API Request with valid data with PUT method. Jason body includes only 2 fields
Expected Result: 1. Response Status code should be 200
2. Response to the API should be 'title' & 'id' and it should match with data mentioned in respective columns Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts/1 Done! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testRequestAndResponse" time="0.332"/>
  <system-out>
    <![CDATA[Feature POSITIVE
Step to execute: Send API Request with valid data with POST method. Jason body includes only one field. 
Expected Result: 1. Response Status code should be 201, It should create data successfully.
2. Response to the API should be 'title' & 'id' and it should match with data mentioned in respective columns Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts Started 
Building JSON Body {  "title" : "Siddharth Sarjerao Ughade" }
Sending Request : https://jsonplaceholder.typicode.com/posts
Response Code from API : 201
Response from API : {
  "title": "Siddharth Sarjerao Ughade",
  "id": 101
}
Verify 'title' Expected : 'Siddharth Sarjerao Ughade' Actual : Siddharth Sarjerao Ughade
Verify 'id' Expected : '101' Actual : 101
Verify field 'body' should not be present in JSON response
Verify field 'userId' should not be present in JSON response
Feature POSITIVE
Step to execute: Send API Request with valid data with POST method. Jason body includes only one field. 
Expected Result: 1. Response Status code should be 201, It should create data successfully.
2. Response to the API should be 'title' & 'id' and it should match with data mentioned in respective columns Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts Done! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testRequestAndResponse" time="0.351"/>
  <system-out>
    <![CDATA[Feature POSITIVE
Step to execute: Send API Request with valid data with PUT method. Jason body includes all 4 fields
Expected Result: 1. Response Status code should be 200
2. Response to the API should be 'title', 'body', 'userid' & 'id' and it should match with data mentioned in respective columns Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts/1 Started 
Building JSON Body {  "id" : "1",  "title" : "Siddharth Sarjerao Ughade",  "body" : "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad",  "userId" : 102 }
Sending Request : https://jsonplaceholder.typicode.com/posts/1
Response Code from API : 200
Response from API : {
  "id": 1,
  "title": "Siddharth Sarjerao Ughade",
  "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad",
  "userId": 102
}
Verify 'id' Expected : '1' Actual : 1
Verify 'title' Expected : 'Siddharth Sarjerao Ughade' Actual : Siddharth Sarjerao Ughade
Verify 'body' Expected : 'et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad' Actual : et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad
Verify 'userId' Expected : '102' Actual : 102
Feature POSITIVE
Step to execute: Send API Request with valid data with PUT method. Jason body includes all 4 fields
Expected Result: 1. Response Status code should be 200
2. Response to the API should be 'title', 'body', 'userid' & 'id' and it should match with data mentioned in respective columns Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts/1 Done! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testRequestAndResponse" time="0.330"/>
  <system-out>
    <![CDATA[Feature POSITIVE
Step to execute: Send API Request with valid data with PUT method. Jason body includes only 1 fields
Expected Result: 1. Response Status code should be 200
2. Response to the API should be 'id' and it should match with data mentioned in respective columns Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts/1 Started 
Building JSON Body {  "id" : "1" }
Sending Request : https://jsonplaceholder.typicode.com/posts/1
Response Code from API : 200
Response from API : {
  "id": 1
}
Verify 'id' Expected : '1' Actual : 1
Verify field 'userId' should not be present in JSON response
Verify field 'body' should not be present in JSON response
Verify field 'title' should not be present in JSON response
Feature POSITIVE
Step to execute: Send API Request with valid data with PUT method. Jason body includes only 1 fields
Expected Result: 1. Response Status code should be 200
2. Response to the API should be 'id' and it should match with data mentioned in respective columns Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts/1 Done! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testRequestAndResponse" time="0.323"/>
  <system-out>
    <![CDATA[Feature POSITIVE
Step to execute: Send API Request with valid data with DELETE method. Jason body should be BLANK
Expected Result: 1. Response Status code should be 200
2. Json response should be BLANK Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts/1 Started 
Building JSON Body {  "" : null }
Sending Request : https://jsonplaceholder.typicode.com/posts/1
Response Code from API : 200
Response from API : {}
Feature POSITIVE
Step to execute: Send API Request with valid data with DELETE method. Jason body should be BLANK
Expected Result: 1. Response Status code should be 200
2. Json response should be BLANK Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts/1 Done! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testVerifyUserIDData" time="0.364"/>
  <system-out>
    <![CDATA[Feature NEGATIVE : 
Step To Execute : Send Request.  
Expected Result: 1. API should return as response of 100 userId's data.
2. Search for userId which is not present in response, so 'title' & 'body' should be BLANK Testcase ID : Get all data for user id and verify data For API : https://jsonplaceholder.typicode.com/posts Started 
Verifying number of records return by API
Extracting 'title' for userid 0
Verifying 'title' : Expected '' Actual : ''
Extracting 'body' for userid 0
Verifying 'body' : Expected '' Actual : ''
Feature NEGATIVE : 
Step To Execute : Send Request.  
Expected Result: 1. API should return as response of 100 userId's data.
2. Search for userId which is not present in response, so 'title' & 'body' should be BLANK Testcase ID : Get all data for user id and verify data Done!! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testVerifyUserIDData" time="0.571"/>
  <system-out>
    <![CDATA[Feature POSITIVE :
Step To Execute : Send Request by passing valid userId.  
Expected Result: 1. API should return as response for single userId's data.
2. 'title' & 'body' should match as mentioned in respective columns for given user id & id Testcase ID : Get all data for user id and verify data For API : https://jsonplaceholder.typicode.com/posts/10 Started 
Verifying number of records return by API
Extracting 'title' for userid 1
Verifying 'title' : Expected 'optio molestias id quia eum' Actual : 'optio molestias id quia eum'
Extracting 'body' for userid 1
Verifying 'body' : Expected 'quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error' Actual : 'quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error'
Feature POSITIVE :
Step To Execute : Send Request by passing valid userId.  
Expected Result: 1. API should return as response for single userId's data.
2. 'title' & 'body' should match as mentioned in respective columns for given user id & id Testcase ID : Get all data for user id and verify data Done!! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testVerifyPostIDData" time="0.491"/>
  <system-out>
    <![CDATA[Feature POSITIVE :
Step To Execute : Send Request with valid postid
Expected Result: 1. API should return as response to 5 postid's data.
2. 'name', 'email' & 'body' should match as mentioned in respective columns for given post id & id
NOTE : This verify last record in response Testcase ID : Get all data for post id and verify data For API : https://jsonplaceholder.typicode.com/comments?postId=1 Started 
Verifying number of records return by API
Extracting 'name' for postId 1
Verifying 'name' : Expected 'vero eaque aliquid doloribus et culpa' Actual : 'vero eaque aliquid doloribus et culpa'
Extracting 'name' for postId 1
Verifying 'email' : Expected 'Hayden@althea.biz' Actual : 'Hayden@althea.biz'
Extracting 'body' for postId 1
Verifying 'body' : Expected 'harum non quasi et ratione\ntempore iure ex voluptates in ratione\nharum architecto fugit inventore cupiditate\nvoluptates magni quo et' Actual : 'harum non quasi et ratione\ntempore iure ex voluptates in ratione\nharum architecto fugit inventore cupiditate\nvoluptates magni quo et'
Feature POSITIVE :
Step To Execute : Send Request with valid postid
Expected Result: 1. API should return as response to 5 postid's data.
2. 'name', 'email' & 'body' should match as mentioned in respective columns for given post id & id
NOTE : This verify last record in response Testcase ID : Get all data for post id and verify data Done!! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testRequestAndResponse" time="0.324"/>
  <system-out>
    <![CDATA[Feature POSITIVE
Step to execute: Send API Request with invalid id with DELETE method
Expected Result: 1. Response Status code should be 200
2. Json response should be BLANK Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts/101 Started 
Building JSON Body {  "" : null }
Sending Request : https://jsonplaceholder.typicode.com/posts/101
Response Code from API : 200
Response from API : {}
Feature POSITIVE
Step to execute: Send API Request with invalid id with DELETE method
Expected Result: 1. Response Status code should be 200
2. Json response should be BLANK Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts/101 Done! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testRequestAndResponse" time="0.362"/>
  <system-out>
    <![CDATA[Feature POSITIVE
Step to execute: Send API Request with valid data with PUT method. Jason body includes only 3 fields
Expected Result: 1. Response Status code should be 200
2. Response to the API should be 'title', 'body' & 'id' and it should match with data mentioned in respective columns Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts/1 Started 
Building JSON Body {  "id" : "1",  "title" : "Siddharth Sarjerao Ughade",  "body" : "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad" }
Sending Request : https://jsonplaceholder.typicode.com/posts/1
Response Code from API : 200
Response from API : {
  "id": 1,
  "title": "Siddharth Sarjerao Ughade",
  "body": "et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad"
}
Verify 'id' Expected : '1' Actual : 1
Verify 'title' Expected : 'Siddharth Sarjerao Ughade' Actual : Siddharth Sarjerao Ughade
Verify 'body' Expected : 'et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad' Actual : et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad
Verify field 'userId' should not be present in JSON response
Feature POSITIVE
Step to execute: Send API Request with valid data with PUT method. Jason body includes only 3 fields
Expected Result: 1. Response Status code should be 200
2. Response to the API should be 'title', 'body' & 'id' and it should match with data mentioned in respective columns Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts/1 Done! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testRequestAndResponse" time="0.347"/>
  <system-out>
    <![CDATA[Feature POSITIVE
Step to execute: Send API Request with valid data with POST method. Jason body includes only two fields
Expected Result: 1. Response Status code should be 201, It should create data successfully
2. Response to the API should be 'title', 'body'  & 'id' and it should match with data mentioned in respective columns Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts Started 
Building JSON Body {  "title" : "Siddharth Sarjerao Ughade",  "body" : "et iusto sed quo iure" }
Sending Request : https://jsonplaceholder.typicode.com/posts
Response Code from API : 201
Response from API : {
  "title": "Siddharth Sarjerao Ughade",
  "body": "et iusto sed quo iure",
  "id": 101
}
Verify 'title' Expected : 'Siddharth Sarjerao Ughade' Actual : Siddharth Sarjerao Ughade
Verify 'body' Expected : 'et iusto sed quo iure' Actual : et iusto sed quo iure
Verify 'id' Expected : '101' Actual : 101
Verify field 'userId' should not be present in JSON response
Feature POSITIVE
Step to execute: Send API Request with valid data with POST method. Jason body includes only two fields
Expected Result: 1. Response Status code should be 201, It should create data successfully
2. Response to the API should be 'title', 'body'  & 'id' and it should match with data mentioned in respective columns Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts Done! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testRequestAndResponse" time="0.342"/>
  <system-out>
    <![CDATA[Feature POSITIVE
Step to execute: Send API Request with valid data with PUT method. Jason body should be BLANK.
Expected Result: 1. Response Status code should be 200
2. Response to the API should be 'id' and it should match with data mentioned in respective columns Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts/1 Started 
Building JSON Body {  "" : null }
Sending Request : https://jsonplaceholder.typicode.com/posts/1
Response Code from API : 200
Response from API : {
  "": null,
  "id": 1
}
Verify 'id' Expected : '1' Actual : 1
Verify field 'userId' should not be present in JSON response
Verify field 'body' should not be present in JSON response
Verify field 'title' should not be present in JSON response
Feature POSITIVE
Step to execute: Send API Request with valid data with PUT method. Jason body should be BLANK.
Expected Result: 1. Response Status code should be 200
2. Response to the API should be 'id' and it should match with data mentioned in respective columns Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts/1 Done! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testVerifyUserIDData" time="0.385"/>
  <system-out>
    <![CDATA[Feature POSITIVE :
Step To Execute : Send Request by passing valid userId.  
Expected Result: 1. API should return as response for single userId's data.
2. 'title' & 'body' should match as mentioned in respective columns for given user id & id Testcase ID : Get all data for user id and verify data For API : https://jsonplaceholder.typicode.com/posts/1 Started 
Verifying number of records return by API
Extracting 'title' for userid 1
Verifying 'title' : Expected 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit' Actual : 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit'
Extracting 'body' for userid 1
Verifying 'body' : Expected 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto' Actual : 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto'
Feature POSITIVE :
Step To Execute : Send Request by passing valid userId.  
Expected Result: 1. API should return as response for single userId's data.
2. 'title' & 'body' should match as mentioned in respective columns for given user id & id Testcase ID : Get all data for user id and verify data Done!! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testRequestAndResponse" time="0.345"/>
  <system-out>
    <![CDATA[Feature POSITIVE
Step to execute: Send API Request with invalid id with PATCH method
Expected Result: 1. Response Status code should be 200
2. Json response should be BLANK Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts/101 Started 
Building JSON Body {  "" : null }
Sending Request : https://jsonplaceholder.typicode.com/posts/101
Response Code from API : 200
Response from API : {
  "": null
}
Feature POSITIVE
Step to execute: Send API Request with invalid id with PATCH method
Expected Result: 1. Response Status code should be 200
2. Json response should be BLANK Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts/101 Done! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testRequestAndResponse" time="1.369"/>
  <system-out>
    <![CDATA[Feature POSITIVE
Step to execute: Send API Request with valid data with POST method. Jason body includes all 3 fields
Expected Result: 1. Response Status code should be 201, It should create data successfully
2. Response to the API should be 'title', 'body', 'userid' & 'id' and it should match with data mentioned in respective columns Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts Started 
Building JSON Body {  "title" : "Siddharth Sarjerao Ughade",  "body" : "et iusto sed quo iure",  "userId" : 102 }
Sending Request : https://jsonplaceholder.typicode.com/posts
Response Code from API : 201
Response from API : {
  "title": "Siddharth Sarjerao Ughade",
  "body": "et iusto sed quo iure",
  "userId": 102,
  "id": 101
}
Verify 'title' Expected : 'Siddharth Sarjerao Ughade' Actual : Siddharth Sarjerao Ughade
Verify 'body' Expected : 'et iusto sed quo iure' Actual : et iusto sed quo iure
Verify 'userId' Expected : '102' Actual : 102
Verify 'id' Expected : '101' Actual : 101
Feature POSITIVE
Step to execute: Send API Request with valid data with POST method. Jason body includes all 3 fields
Expected Result: 1. Response Status code should be 201, It should create data successfully
2. Response to the API should be 'title', 'body', 'userid' & 'id' and it should match with data mentioned in respective columns Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts Done! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testVerifyPostIDData" time="0.467"/>
  <system-out>
    <![CDATA[Feature NEGATIVE :
Step To Execute : Send Request with Invalid postid & comments
Expected Result: 1. API should NOT return any response.
2. 'name', 'email' & 'body' should be BLANK Testcase ID : Get all data for post id and verify data For API : https://jsonplaceholder.typicode.com/posts/0/comments Started 
Verifying number of records return by API
Extracting 'name' for postId 1
Verifying 'name' : Expected '' Actual : ''
Extracting 'name' for postId 1
Verifying 'email' : Expected '' Actual : ''
Extracting 'body' for postId 1
Verifying 'body' : Expected '' Actual : ''
Feature NEGATIVE :
Step To Execute : Send Request with Invalid postid & comments
Expected Result: 1. API should NOT return any response.
2. 'name', 'email' & 'body' should be BLANK Testcase ID : Get all data for post id and verify data Done!! ]]>
  </system-out>
  <testcase classname="scripts.testRestAPI" name="testRequestAndResponse" time="0.318"/>
  <system-out>
    <![CDATA[Feature POSITIVE
Step to execute: Send API Request with valid data with PATCH method. Jason body should be BLANK
Expected Result: 1. Response Status code should be 200
2. Response to the API should be 'id', 'title', 'body' & 'userId' and it should match with data mentioned in respective columns Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts/1 Started 
Building JSON Body {  "" : null }
Sending Request : https://jsonplaceholder.typicode.com/posts/1
Response Code from API : 200
Response from API : {
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto",
  "": null
}
Verify 'id' Expected : '1' Actual : 1
Verify 'title' Expected : 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit' Actual : sunt aut facere repellat provident occaecati excepturi optio reprehenderit
Verify 'body' Expected : 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto' Actual : quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto
Verify 'userId' Expected : '1' Actual : 1
Feature POSITIVE
Step to execute: Send API Request with valid data with PATCH method. Jason body should be BLANK
Expected Result: 1. Response Status code should be 200
2. Response to the API should be 'id', 'title', 'body' & 'userId' and it should match with data mentioned in respective columns Testcase ID : Request send and verify response For API : https://jsonplaceholder.typicode.com/posts/1 Done! ]]>
  </system-out>
</testsuite> <!-- scripts.testRestAPI -->
